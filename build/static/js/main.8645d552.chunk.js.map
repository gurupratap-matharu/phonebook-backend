{"version":3,"sources":["components/Filter.js","components/PersonsList.js","components/PersonForm.js","services/persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Filter","handleFilterChange","newFilter","onChange","value","PersonsList","persons","handleDeleteOf","filter","person","name","toLowerCase","includes","map","key","id","number","onClick","PersonForm","handleNameSubmit","handleNameChange","newName","handleNumberChange","newNumber","onSubmit","type","baseUrl","axios","get","then","response","data","personObject","post","put","delete","Notification","notificationMessage","className","Error","errorMessage","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setNotificationMessage","setErrorMessage","useEffect","personService","returnedPersons","event","target","preventDefault","trimmedName","trim","trimmedNumber","indexOf","returnedPerson","concat","setTimeout","window","confirm","find","console","log","alert","toBeDeletedPerson","p","removedPerson","catch","error","ReactDOM","render","document","getElementById"],"mappings":"mNAUeA,EARA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,mBAAoBC,EAAgB,EAAhBA,UAClC,OACI,sCACU,2BAAOC,SAAUF,EAAoBG,MAAOF,MCe/CG,EAlBK,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASJ,EAAgC,EAAhCA,UAAWK,EAAqB,EAArBA,eACvC,OACI,4BACKD,EAAQE,QAAO,SAACC,GAAD,OACZA,EAAOC,KACFC,cACAC,SAASV,EAAUS,kBACvBE,KAAI,SAAAJ,GAAM,OACP,wBAAIK,IAAKL,EAAOM,IACXN,EAAOC,KAAM,IACbD,EAAOO,OAAQ,IAChB,4BAAQC,QAAS,WAAQV,EAAeE,EAAOM,MAA/C,gBCQTG,EAnBI,SAAC,GAKC,IAJjBC,EAIgB,EAJhBA,iBACAC,EAGgB,EAHhBA,iBACAC,EAEgB,EAFhBA,QACAC,EACgB,EADhBA,mBACAC,EAAgB,EAAhBA,UACA,OACI,0BAAMC,SAAUL,GACZ,sCACU,2BAAOhB,SAAUiB,EAAkBhB,MAAOiB,KAEpD,wCACY,2BAAOlB,SAAUmB,EAAoBlB,MAAOmB,KAExD,4BAAQE,KAAK,UAAb,S,gBCfNC,EAAU,eAoBD,EAlBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB9B,EAdA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY9B,EATA,SAACC,EAAcjB,GAE1B,OADgBY,IAAMO,IAAN,UAAaR,EAAb,YAAwBX,GAAMiB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO9B,EAJA,SAAChB,GAEZ,OADgBY,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BX,IAC5Bc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCN9BK,EAXM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACpB,OAA4B,OAAxBA,EACO,KAGP,yBAAKC,UAAU,uBACVD,ICMEE,EAZD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACb,OAAqB,OAAjBA,EACO,KAIP,yBAAKF,UAAU,gBACVE,ICoHEC,EArHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTpC,EADS,KACAqC,EADA,OAEcD,mBAAS,IAFvB,mBAETrB,EAFS,KAEAuB,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTnB,EAHS,KAGEsB,EAHF,OAIkBH,mBAAS,IAJ3B,mBAITxC,EAJS,KAIE4C,EAJF,OAKsCJ,mBAAS,MAL/C,mBAKTL,EALS,KAKYU,EALZ,OAMwBL,mBAAS,MANjC,mBAMTF,EANS,KAMKQ,EANL,KAQhBC,qBAAU,WACRC,IACGrB,MAAK,SAAAsB,GACJR,EAAWQ,QAEd,IAkFH,OACE,6BACE,yCACA,kBAAC,EAAD,CAAQlD,mBA3Ee,SAACmD,GAC1BN,EAAaM,EAAMC,OAAOjD,QA0EwBF,UAAWA,IAC3D,kBAAC,EAAD,CACEiB,iBAzEmB,SAACiC,GACxBA,EAAME,iBACN,IAAMC,EAAclC,EAAQmC,OACtBC,EAAgBlC,EAAUiC,OAC1BxB,EAAe,CACnBtB,KAAM6C,EACNvC,OAAQyC,GAGV,GAAoB,KAAhBF,GAAwC,KAAlBE,GAK1B,IAAiE,IAA7DnD,EAAQO,KAAI,SAAAJ,GAAM,OAAIA,EAAOC,QAAMgD,QAAQH,GAiB/CL,EACUlB,GACPH,MAAK,SAAA8B,GACJhB,EAAWrC,EAAQsD,OAAOD,IAC1BZ,EAAuB,GAAD,OAAIY,EAAejD,KAAnB,sCACtBmD,YAAW,WACTd,EAAuB,KAAM,OAC5B,KACHH,EAAW,IACXC,EAAa,YAvBf,GAFeiB,OAAOC,QAAP,UAAkBR,EAAlB,6EAEH,CACV,IAAM9C,EAASH,EAAQ0D,MAAK,SAAAvD,GAAM,OAAIA,EAAOC,OAAS6C,KAEtDL,EACUlB,EAAcvB,EAAOM,IAC5Bc,MAAK,SAAA8B,GACJM,QAAQC,IAAIP,GACZhB,EAAWrC,EAAQsD,OAAOD,IAC1Bf,EAAW,IACXC,EAAa,aAhBnBsB,MAAM,iCAgEJ/C,iBAtFmB,SAACgC,GACxBR,EAAWQ,EAAMC,OAAOjD,QAsFpBiB,QAASA,EACTC,mBApFqB,SAAC8B,GAC1BP,EAAaO,EAAMC,OAAOjD,QAoFtBmB,UAAWA,IAEb,kBAAC,EAAD,CAAcc,oBAAqBA,IACnC,kBAAC,EAAD,CAAOG,aAAcA,IACrB,uCACA,kBAAC,EAAD,CACElC,QAASA,EACTJ,UAAWA,EACXK,eAzCiB,SAACQ,GACtB,IAAMqD,EAAoB9D,EAAQ0D,MAAK,SAAAK,GAAC,OAAIA,EAAEtD,KAAOA,KACtC+C,OAAOC,QAAP,iBAAyBK,EAAkB1D,KAA3C,QAGbwC,EACUnC,GACPc,MAAK,SAAAyC,GACJ3B,EAAWrC,EAAQE,QAAO,SAAA6D,GAAC,OAAIA,EAAEtD,KAAOA,MACxCgC,EAAuB,GAAD,OAAIqB,EAAkB1D,KAAtB,uBACtBmD,YAAW,WACTd,EAAuB,QACtB,QAEJwB,OAAM,SAAAC,GACLxB,EAAgB,yBAChBa,YAAW,WACTb,EAAgB,QACf,KACHL,EAAWrC,EAAQE,QAAO,SAAA6D,GAAC,OAAIA,EAAEtD,KAAOA,c,MC7FlD0D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8645d552.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ handleFilterChange, newFilter }) => {\n    return (\n        <div>\n            Find: <input onChange={handleFilterChange} value={newFilter} />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonsList = ({ persons, newFilter, handleDeleteOf }) => {\n    return (\n        <ul>\n            {persons.filter((person) =>\n                person.name\n                    .toLowerCase()\n                    .includes(newFilter.toLowerCase()))\n                .map(person =>\n                    <li key={person.id}>\n                        {person.name}{' '}\n                        {person.number}{' '}\n                        <button onClick={() => { handleDeleteOf(person.id) }}>Delete</button>\n                    </li >\n                )}\n        </ul>\n    )\n}\n\nexport default PersonsList","import React from 'react'\n\nconst PersonForm = ({\n    handleNameSubmit,\n    handleNameChange,\n    newName,\n    handleNumberChange,\n    newNumber }) => {\n    return (\n        <form onSubmit={handleNameSubmit}>\n            <div>\n                Name: <input onChange={handleNameChange} value={newName} />\n            </div>\n            <div>\n                Number: <input onChange={handleNumberChange} value={newNumber} />\n            </div>\n            <button type='submit'>Add</button>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\nconst create = (personObject) => {\n    const request = axios.post(baseUrl, personObject)\n    return request.then(response => response.data)\n}\n\nconst update = (personObject, id) => {\n    const request = axios.put(`${baseUrl}/${id}`, personObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Notification = ({ notificationMessage }) => {\n    if (notificationMessage === null) {\n        return null\n    }\n    return (\n        <div className=\"notificationMessage\">\n            {notificationMessage}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Error = ({ errorMessage }) => {\n    if (errorMessage === null) {\n        return null\n    }\n\n    return (\n        <div className=\"errorMessage\">\n            {errorMessage}\n        </div>\n    )\n}\n\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonsList from './components/PersonsList'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(returnedPersons => {\n        setPersons(returnedPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameSubmit = (event) => {\n    event.preventDefault()\n    const trimmedName = newName.trim()\n    const trimmedNumber = newNumber.trim()\n    const personObject = {\n      name: trimmedName,\n      number: trimmedNumber,\n    }\n\n    if (trimmedName === '' || trimmedNumber === '') {\n      alert('Please enter both the fields')\n      return\n    }\n\n    if (persons.map(person => person.name).indexOf(trimmedName) !== -1) {\n      const result = window.confirm(`${trimmedName} is already added to phonebook, replace the old number with the new one?`)\n\n      if (result) {\n        const person = persons.find(person => person.name === trimmedName)\n\n        personService\n          .update(personObject, person.id)\n          .then(returnedPerson => {\n            console.log(returnedPerson)\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n      return\n    }\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNotificationMessage(`${returnedPerson.name} has been added to the phonebook.`)\n        setTimeout(() => {\n          setNotificationMessage(null, 5000)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n  }\n\n  const handleDeleteOf = (id) => {\n    const toBeDeletedPerson = persons.find(p => p.id === id)\n    const result = window.confirm(`Delete ${toBeDeletedPerson.name} ?`)\n\n    if (result) {\n      personService\n        .remove(id)\n        .then(removedPerson => {\n          setPersons(persons.filter(p => p.id !== id))\n          setNotificationMessage(`${toBeDeletedPerson.name} has been deleted.`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`Sorry. User not found`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter handleFilterChange={handleFilterChange} newFilter={newFilter} />\n      <PersonForm\n        handleNameSubmit={handleNameSubmit}\n        handleNameChange={handleNameChange}\n        newName={newName}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n      />\n      <Notification notificationMessage={notificationMessage} />\n      <Error errorMessage={errorMessage} />\n      <h2>Numbers</h2>\n      <PersonsList\n        persons={persons}\n        newFilter={newFilter}\n        handleDeleteOf={handleDeleteOf} />\n    </div >\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}